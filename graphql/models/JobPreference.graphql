extend type Query {
    jobPreferences(search: String @scope, job_category_id: ID @eq, amount: Float @where(operator: "<")): [JobPreference] @paginate
    jobPreference(id: ID! @eq): JobPreference @find
}

extend type Mutation {
    createJobPreference(input: JobPreferenceCreateInput! @spread): JobPreference @guard(with: ["api"]) @field(resolver: "JobPreferenceMutation@store")
}

input JobPreferenceCreateInput {
    employment_type: String!
    jobCategory: JobCategoryBelongsTo!
    amount: Float!
}

input JobCategoryBelongsTo {
    connect: ID! @rules(apply: ["exists:job_categories,id"])
}

type JobPreference {
    id: ID,
    employment_type: String,
    amount: String,
    jobCategory: JobCategory @belongsTo
    user: User @belongsTo
}
